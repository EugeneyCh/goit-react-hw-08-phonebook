{"version":3,"file":"static/js/74.2ffd8e6b.chunk.js","mappings":"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","sources":["redux/users/selectors.js","components/ContactForm/contactForm.js","components/Filter/filter.js","components/ContactList/ContactList.js","components/Loader/loader.js","components/Contact/contact.js","components/pages/ContactsView.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/users/selectors';\nimport { useEffect, useState } from 'react';\nimport { addContactFromDB, fetchContacts } from 'redux/users/operations';\nimport { Box, Button, Container, TextField } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport { toast } from 'react-hot-toast';\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const saveContactHandler = e => {\n    e.preventDefault();\n    if (name.trim() === '') {\n      toast.error('Enter name, please');\n      return;\n    }\n\n    if (contacts.length === 0) {\n      dispatch(\n        addContactFromDB({\n          name,\n          number,\n        })\n      );\n    } else {\n      const checkNameToSame = name => {\n        const lowerCaseNewName = name.toLowerCase().trim();\n        return contacts.some(\n          contact => contact.name.toLowerCase() === lowerCaseNewName\n        );\n      };\n      checkNameToSame(name)\n        ? toast.error(`${name} is already in contacts`)\n        : dispatch(\n            addContactFromDB({\n              name,\n              number,\n            }),\n            toast.success(`${name} added to contacts.`),\n            setName(''),\n            setNumber('')\n          );\n      dispatch(fetchContacts());\n    }\n  };\n\n  return (\n    <Container\n      maxWidth=\"xs\"\n      sx={{\n        bgcolor: 'lightblue',\n        p: '20px 0',\n        border: '2px solid #ccc',\n        boxShadow: '0px 0px 5px 0px rgba(0, 0, 0, 0.5)',\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={saveContactHandler}\n        autoComplete=\"off\"\n        sx={{\n          width: '320px',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px',\n          margin: '20px auto ',\n        }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          fullWidth\n          label=\"Name of contact\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          fullWidth\n          label=\" Number of contact\"\n          variant=\"outlined\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          sx={{\n            display: 'flex',\n            gap: '16px',\n            bgcolor: '#2c87a5',\n          }}\n        >\n          <PersonAddIcon />\n          Add contact\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/users/slice';\nimport React from 'react';\nimport { TextField } from '@mui/material';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const saveFilterQuery = event => {\n    const filterQuery = event.target.value;\n    dispatch(updateFilter(filterQuery.trim().toLowerCase()));\n  };\n\n  return (\n    <>\n      <TextField\n        id=\"outlined-basic\"\n        fullWidth\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        onChange={saveFilterQuery}\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport { Box, Container } from '@mui/material';\n\nexport default function ContactList({ children }) {\n  return (\n    <Container\n      maxWidth=\"xs\"\n      sx={{\n        bgcolor: 'lightblue',\n        mt: '36px',\n        p: '20px 0',\n        border: '2px solid #ccc',\n        boxShadow: '0px 0px 5px 0px rgba(0, 0, 0, 0.5)',\n      }}\n    >\n      <Box\n        component=\"ul\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '8px',\n          paddingLeft: '0',\n        }}\n      >\n        {children}\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { MutatingDots } from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <MutatingDots\n      height=\"100\"\n      width=\"100\"\n      color=\"#305ad9\"\n      secondaryColor=\"#d9cd30\"\n      radius=\"12.5\"\n      ariaLabel=\"mutating-dots-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'start',\n        alignItems: 'center',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n\nexport default Loader;\n","import { useSelector, useDispatch } from 'react-redux';\n// import { getContacts } from 'redux/users/selectors';\nimport {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n} from 'redux/users/selectors';\nimport { deleteContact } from 'redux/users/slice';\nimport Loader from 'components/Loader/loader';\n// import css from './Contact.module.css';\n\nimport { deleteContactFromDB } from 'redux/users/operations';\nimport { Box, Button, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction Contact() {\n  // const { contacts, filter, isLoading } = useSelector(getContacts);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContactFromDB(id));\n    console.log('Deleting contact with id', id);\n    dispatch(deleteContact(id));\n  };\n  // const handleDeleteContact = id => {\n  //   dispatch(deleteContact(id));\n  // };\n\n  const getVisibleContacts = () => {\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter)\n      );\n    }\n  };\n\n  const visibleContact = getVisibleContacts();\n  if (isLoading) {\n    return <Loader />;\n  }\n  if (error) {\n    return 'Error' + error;\n  }\n  return (\n    <>\n      {visibleContact ? (\n        visibleContact.map(({ id, name, number }) => (\n          <Box\n            component=\"li\"\n            key={id}\n            sx={{\n              display: 'flex',\n              justifyContent: ' space-between',\n              alignItems: 'center',\n              // maxWidth: ' 70%',\n              marginBottom: '10px',\n            }}\n          >\n            <Typography sx={{ width: '150px' }}>{name}</Typography>\n            <Typography sx={{ width: '150px' }}>{number}</Typography>\n            <Button\n              variant=\"contained\"\n              endIcon={<DeleteIcon />}\n              type=\"button\"\n              onClick={() => handleDeleteContact(id)}\n              sx={{ bgcolor: '#2c87a5' }}\n            >\n              Delete\n            </Button>\n          </Box>\n          // <li key={id} className={css.contactRow}>\n          //   <span>{name}</span>\n          //   <span>{number}</span>\n          //   <button\n          //     type=\"button\"\n          //     className={css.deleteButton}\n          //     onClick={() => handleDeleteContact(id)}\n          //   >\n          //     Delete\n          //   </button>\n          // </li>\n        ))\n      ) : (\n        <p>No contacts to display.</p>\n      )}\n    </>\n  );\n}\n\nexport default Contact;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport Filter from 'components/Filter/filter';\nimport ListContacts from 'components/ContactList/ContactList';\nimport Contact from 'components/Contact/contact';\nimport { fetchContacts } from 'redux/users/operations';\nimport { Container, Typography } from '@mui/material';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts);\n  }, [dispatch]);\n\n  return (\n    <Container\n      maxWidth=\"xs\"\n      sx={{\n        bgcolor: 'lightblue',\n        mt: '4px',\n        p: '20px 0',\n        border: '2px solid #ccc',\n        boxShadow: '0px 0px 5px 0px rgba(0, 0, 0, 0.5)',\n      }}\n    >\n      <Typography\n        variant=\"h3\"\n        component=\"h2\"\n        align=\"center\"\n        sx={{ m: '20px 0' }}\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Typography\n        variant=\"h4\"\n        component=\"h3\"\n        align=\"center\"\n        sx={{ m: '20px 0' }}\n      >\n        Contacts\n      </Typography>\n      <Filter />\n      <ListContacts children={<Contact />} />\n    </Container>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","target","value","useEffect","fetchContacts","Container","maxWidth","sx","bgcolor","p","border","boxShadow","Box","component","onSubmit","e","preventDefault","trim","length","addContactFromDB","lowerCaseNewName","toLowerCase","some","contact","checkNameToSame","toast","autoComplete","width","display","flexDirection","gap","margin","TextField","id","fullWidth","label","variant","type","pattern","title","required","onChange","Button","PersonAdd","event","filterQuery","updateFilter","ContactList","children","mt","paddingLeft","height","color","secondaryColor","radius","ariaLabel","wrapperStyle","justifyContent","alignItems","wrapperClass","visible","visibleContact","includes","getVisibleContacts","map","marginBottom","Typography","endIcon","Delete","onClick","deleteContactFromDB","console","log","deleteContact","handleDeleteContact","ContactsView","align","m"],"sourceRoot":""}